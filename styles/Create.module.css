.container {
  width: 100%;
  min-height: 100dvh;
  margin: 0;
  margin-top: 10dvh;
  padding: 0;
}


.popOverShare {
  position: absolute;
  top: -12vh;
}

.create {
  height: 100dvh;
  overflow-x: hidden;
  overflow-y: scroll;
  flex: 1 1 0%;
  color: var(--editor_text);
  position: relative;
}

.create::-webkit-scrollbar {
  width: 2px;
}

/* Track */
.create::-webkit-scrollbar-track {
  background: #dedede;
}

/* Handle */
.create::-webkit-scrollbar-thumb {
  border-radius: 1em;
  background: rgb(52, 228, 255);
}

/* Handle on hover */
.create::-webkit-scrollbar-thumb:hover {
  background: rgb(0, 225, 255);

}

.creategrid {
  display: grid;
  grid-template-columns: 1fr;
  padding: 3em;
  word-break: break-word;
  background: var(--background);
}

/*
.creategrid_lock {
  height: 60dvh;
  overflow: scroll;
}*/

.header {
  width: 100%;
  height: 40dvh;
  display: flex;
  align-items: center;
  justify-content: center;

}

.titleinput {
  /* min-width: 40%; */
  width: 100%;
  resize: none;
  outline: none;
  background-color: transparent;
  color: var(--title_input_color);
  border: none;
  /* border-radius: 10px; */
  padding: 10px;
  /* font-family: monospace; */
  font-size: 40px;
  line-height: 1.5;
  resize: none;
  /*
  -webkit-text-shadow: 0 0 5px #000000;/*
  /* text-shadow: 0 0 5px #9f86ff; */
  text-align: center;
  font-weight: 700;
  text-wrap: balance;
}

.titleinput:hover {
  cursor: text;
}

.titleinput::placeholder {
  text-shadow: none;
  color: var(--title_input_color_plcholder);
  font-weight: 600;
}


.containererror {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  width: 100%;
  padding: 0;
  margin: 0;
}

.containererror>h1 {
  padding: 1em;
}


.title {
  width: 100%;
  position: relative;
  height: 40dvh;
  background: var(--title_background);
  background-size: 100%;
  box-shadow: 0px 0px 14px 0px var(--boxshadow_primary);
}

.titleeditorcontainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  max-width: 80%;
  justify-content: center;

}

.articleTitle_img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
}

.headerstuff {
  position: relative;
  z-index: 2;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

}

@media(max-width: 900px) {
  .headerstuff {
    padding: 1em;
  }

  .title h1 {
    font-size: 2em;
  }
}


@media(max-width: 800px) {
  .create {
    height: 100%;
  }

  .creategrid {
    padding: 1.5em;
  }
}

.title_buttons {
  position: absolute;
  bottom: 1em;
  right: 1em;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 15px;
}

.title_buttons_btn {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  border-radius: 5px;
  padding: 10px;
  color: var(--title_buttons_fill);
  cursor: pointer;
  background: var(--title_buttons_background);
}

.customfileupload {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.customfileupload span {
  display: flex;
  cursor: pointer;
}

.finput {
  display: none;
}

/*For editor plugin iframe*/

.popOutbtn {
  display: flex;
  border: none;
  background: none;
  outline: none;
  position: absolute;
  top: 5px;
  z-index: 10;
  right: 5px;
  cursor: pointer;
}

.popOutbtn svg {
  fill: #fff;
}

/*Others...*/

.buttonlabel {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.buttonlabel:hover>.buttonlabel_label {
  display: block;
}

.buttonlabel_label {
  display: none;
  position: absolute;
  padding: 5px;
  border-radius: 5px;
  background: var(--buttonlabel_label_background);
  width: -moz-fit-content;
  width: fit-content;
  white-space: nowrap;
  color: var(--buttonlabel_label_color);
  font-size: 12px;
  /* font-weight: 100; */

  /* Adjustments to prevent going off-screen */
  left: 50%;
  /* Position at the horizontal center */
  transform: translateX(-50%);
  /* Move label back by half its width */

  /* Optional: Add padding to the top to create space between button and label */
  top: calc(-30px - 1em - 5px);

  /* Arrow styles */

}

.buttonlabel_label:after {
  content: "";
  position: absolute;
  bottom: -9px;
  /* Adjust as needed */
  left: 50%;
  transform: translateX(-50%) rotate(180deg);
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent var(--buttonlabel_label_background) transparent;
}


/*Todo check box styles*/

.todo_container {
  padding: 10px;
}

.todolist {
  list-style-type: none;
  display: flex;
  flex-direction: column;
  gap: 3px;
}

.todoiteminput {
  border: none;
  padding: 10px;
  border-radius: 5px;
  background: #00000000;
  color: #fff;
  width: 100%;
  margin: 1em;
  font-size: 12px;
  outline: none;
}

.todolist li {
  display: flex;
  flex-direction: row;
  gap: 10px;
  align-items: center;
  min-height: 25px;
}

.todolist li span {
  padding: 10px;
  border: 1px solid transparent;
  outline: none;
}

.todolist li span:focus-within {
  color: #e4e4e4;
  border: 1px solid #353535;
  border-radius: 5px;
}

/* Hide the default checkbox */
.todocontainer input {
  display: none;
}

.todocontainer {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

/* Create a custom checkbox */
.todocheckmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #2196F300;
  border-radius: 0.25em;
  transition: all 0.25s;
}

/* Create the checkmark/indicator (hidden when not checked) */
.todocheckmark:after {
  content: "";
  position: absolute;
  transform: rotate(0deg);
  border: 0.1em solid black;
  left: 0;
  top: 0;
  width: 1.05em;
  height: 1.05em;
  border-radius: 0.25em;
  transition: all 0.25s, border-width 0.1s;
}

/* Show the checkmark when checked */
.todocontainer input:checked~.todocheckmark:after {
  left: 0.45em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border-color: #fff0 rgb(0, 0, 0) white #fff0;
  border-width: 0 0.15em 0.15em 0;
  border-radius: 0em;
  transform: rotate(45deg);
}

.tododeletebtn {
  border: none;
  color: #a9a9a9;
  border-radius: 3px;
  cursor: pointer;
  font-weight: 600;
  font-size: 12px;
  background: none;
}

.tododeletebtn svg {
  fill: #353535;
  transition: 0.2s;
}

.tododeletebtn:hover svg {
  fill: #ff5555;
}

.tododeletebtn svg path,
.popOutbtn svg path {
  stroke: none !important;
}

/*!!END!! todo checkbox styles*/

/*Loader (remove and use component asap)*/

.loaderLong {
  display: block;
  --height-of-loader: 4px;
  --loader-color: #0071e2;
  width: 130px;
  height: var(--height-of-loader);
  border-radius: 30px;
  background-color: rgba(0, 0, 0, 0.2);
  position: relative;
}

.loaderLong_con {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  min-height: 100px;
}

.loaderLong::before {
  content: "";
  position: absolute;
  background: #707684;
  top: 0;
  left: 0;
  width: 0%;
  height: 100%;
  border-radius: 30px;
  animation: moving 1s ease-in-out infinite;
  ;
}

@keyframes moving {
  50% {
    width: 100%;
  }

  100% {
    width: 0;
    right: 0;
    left: unset;
  }
}

.copypopconf {
  z-index: 100;
  color: var(--modal_text_color);
  background: var(--popup_background);
  animation: popincopyconf 0.1s 1 ease-in-out;
  padding: 1em;
  font-weight: 600;
  font-family: "Special";
  border-radius: calc(0.5rem - 4px);
  display: block;
}


.pagebtn {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 60px;
  height: 30px;
  border-radius: calc(0.5rem - 2px);
  border: none;
  cursor: pointer;
  background: #F4F4F5;
  color: #09090B;
  padding: 8px 16px;
  font-weight: 500;
  font-family: "Special", "Inter";
  margin-top: 10px;
}

.pagebtn_dark {
  background: #000;
  color: #fff;
}

.pagebtn:disabled {
  opacity: 0.2;
}

.pagebtn:disabled:active {
  background: #F4F4F5;
}

.pagebtn:active {
  transition: 0.1s all;
  background: #e8e8e8;
}


@keyframes popincopyconf {
  0% {
    display: block;
    transform: scale(0.7);
    opacity: 0;
  }

  100% {
    display: block;
    transform: scale(1);
    opacity: 1;
  }
}

@media (prefers-color-scheme: dark) {
  .create {
    color: var(--editor_text);
  }

  .todocontainer input:checked~.todocheckmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border-color: #fff0 white white #fff0;
    border-width: 0 0.15em 0.15em 0;
    border-radius: 0em;
    transform: rotate(45deg);
  }

  .title {
    background: linear-gradient(20deg, #9E9E9E, #607D8B, #9E9E9E);
    box-shadow: 0px 0px 14px 0px var(--boxshadow_primary);
  }

  .titleinput {
    color: #fff;
  }
}


@media(max-width: 600px) {
  .title_buttons {
    position: absolute;
    bottom: 1em;
    right: 0;
    left: 0;
    display: flex;
    flex-direction: row;
    /* grid-template-columns: 1fr 1fr 1fr; */
    align-items: center;
    grid-gap: 5px;
    gap: 15px;
    transform: scale(0.85);
    width: 100%;
    /* margin: 1em; */
    flex-wrap: nowrap;
    justify-content: center;
  }
}



@media print {

  .title_buttons {
    display: none;
  }

  .titleinput {
    font-size: 24px;
  }

  .create {
    font-size: 70% !important;
  }

}



/*Menu buttons*/

.LongBarLoaderDiv {
  height: 200px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.LongBarLoader {
  display: block;
  --height-of-loader: 4px;
  --loader-color: #0071e2;
  width: 130px;
  height: var(--height-of-loader);
  border-radius: 30px;
  background-color: rgba(0, 0, 0, 0.2);
  position: relative;
}

.LongBarLoader::before {
  content: "";
  position: absolute;
  background: var(--loader-color);
  top: 0;
  left: 0;
  width: 0%;
  height: 100%;
  border-radius: 30px;
  animation: movinga 1s ease-in-out infinite;
  ;
}

@keyframes movinga {
  50% {
    width: 100%;
  }

  100% {
    width: 0;
    right: 0;
    left: unset;
  }
}